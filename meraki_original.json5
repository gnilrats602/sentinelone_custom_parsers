{
    // specify a time zone if the timestamps in your log are not in GMT
    // timezone: "GMT-0800"
    attributes: {
        "dataSource.vendor": "Cisco",
    },
    patterns: {
        //maps to high_resolution_timestamp:
        // timestamp: "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}(\\+|-)\\d{2}:\\d{2}"
        "tsPatternPA": "[A-za-z]+\\s+\\d{1,2} [\\d:]+", //application_characteristic can be a single value, a comma delimited list in quotes, or blank. Null value is handled by format: traffic-2, not by this pattern.
        "application_characteristic": "(\".*\")|[^,]+", //description field from system log is wrapped in quotes and may contain commas"
        "description": "(\".*\")", //identify the pattern code
        //discard future_use fields
        "misc": "[^,]*"
    },
    formats: [
        {
            id: "vpn_firewall_with_MAC",
            format: "<$syslog_priority$>$syslog_version$ $unix.time$ $device.hostname$ $event.type$ src=$src.ip.address$ dst=$dst.ip.address$ mac=$dst.mac_addr$ protocol=$meta.event.name$ sport=$src.port.number$ dport=$dst.port.number$ pattern: $pattern{regex=(\\w+)\\s(\\w+)}$",
            attributes: {
                "dataSource.technology": "firewall",
                "dataSource.category": "security",
                "dataSource.name": "Cisco Meraki MX Firewall"
            },
            rewrites: [
                {
                    input: "unix.time",
                    output: "timestamp",
                    match: "^(\\d+)\\.(\\d+)$",
                    replace: "."
                },
                {
                    input: "dst.ip.address",
                    output: "dst_endpoint.ip",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "event.type",
                    output: "activity_name",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "dst.ip.address",
                    output: "dst_endpoint.ip",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "dst.mac_addr",
                    output: "dst_endpoint.mac_addr",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "dst.port.number",
                    output: "dst_endpoint.port",
                    match: "5",
                    replace: "5"
                },
                {
                    input: "pattern",
                    output: "unmapped.action_value",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "pattern",
                    output: "event.network.connectionStatus",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "meta.event.name",
                    output: "connection_info.protocol_name",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "src.ip.address",
                    output: "src_endpoint.ip",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "src.port.number",
                    output: "src_endpoint.port",
                    match: "\\.",
                    replace: "."
                }
            ],
            halt: true
        },
        {
            id: "vpn_firewall_without_MAC",
            format: "<$syslog_priority$>$syslog_version$ $unix.time$ $device.hostname$ $event.type$ src=$src.ip.address$ dst=$dst.ip.address$ protocol=$meta.event.name$ sport=$src.port.number$ dport=$dst.port.number$ pattern: $pattern{regex=(\\w+)\\s(\\w+)}$",
            attributes: {
                "dataSource.technology": "firewall",
                "dataSource.category": "security",
                "dataSource.name": "Cisco Meraki MX Firewall"
            },
            rewrites: [
                {
                    input: "unix.time",
                    output: "timestamp",
                    match: "^(\\d+)\\.(\\d+)$",
                    replace: "."
                },
                {
                    input: "dst.ip.address",
                    output: "dst_endpoint.ip",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "event.type",
                    output: "activity_name",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "dst.ip.address",
                    output: "dst_endpoint.ip",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "dst.mac_addr",
                    output: "dst_endpoint.mac_addr",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "dst.port.number",
                    output: "dst_endpoint.port",
                    match: "5",
                    replace: "5"
                },
                {
                    input: "pattern",
                    output: "unmapped.action_value",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "pattern",
                    output: "event.network.connectionStatus",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "meta.event.name",
                    output: "connection_info.protocol_name",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "src.ip.address",
                    output: "src_endpoint.ip",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "src.port.number",
                    output: "src_endpoint.port",
                    match: "\\.",
                    replace: "."
                }
            ],
            halt: true
        },
        {
            id: "urls",
            format: "<$syslog_priority$>$syslog_version$ $unix.time$ $device_hostname$ $event.type$ src=$src.ip.address$:$src.port.number$ dst=$dst.ip.address$:$dst.port.number$ mac=$dst_endpoint.mac_addr$ request: $request$ $url$",
            attributes: {
                "dataSource.technology": "firewall",
                "dataSource.category": "security",
                "dataSource.name": "Cisco Meraki MX Firewall"
            },
            rewrites: [
                {
                    input: "unix.time",
                    output: "timestamp",
                    match: "^(\\d+)\\.(\\d+)$",
                    replace: "."
                },
                {
                    input: "event.type",
                    output: "activity_name",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "dst_endpoint.mac_addr",
                    output: "dst_endpoint.mac_addr",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "src.ip.address",
                    output: "src_endpoint.ip",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "src.port.number",
                    output: "src_endpoint.port",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "dst.ip.address",
                    output: "dst_endpoint.ip",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "dst.port.number",
                    output: "dst_endpoint.port",
                    match: "5",
                    replace: "5"
                },
                {
                    input: "pattern",
                    output: "unmapped.action_value",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "pattern",
                    output: "event.network.connectionStatus",
                    match: "\\.",
                    replace: "."
                },
                {
                    input: "meta.event.name",
                    output: "connection_info.protocol_name",
                    match: "\\.",
                    replace: "."
                },
            ],
            halt: true
        },
    ]
}